这里需要讲的是，ModuleList 可以存储多个 model，传统的方法，一个model 就要写一个 forward ，但是如果将它们存到一个 ModuleList 的话，就可以使用一个 forward。
ModuleList是Module的子类，当在Module中使用它的时候，就能自动识别为子module。
当添加 nn.ModuleList 作为 nn.Module 对象的一个成员时（即当我们添加模块到我们的网络时），所有 nn.ModuleList 内部的 nn.Module 的 parameter 也被添加作为 我们的网络的 parameter。
使用 ModuleList 也可以使得网络的结构具有灵活性，比如我需要将网络的层数设置为变量，传统的方法要借助 list 实现，并且不方便，而使用 ModuleList就可以简化这个操作。
class model2(nn.Module):
    def __init__(self):
        super(model2, self).__init__()
        self.layers=nn.ModuleList([
            nn.Linear(1,10), nn.ReLU(),
            nn.Linear(10,100),nn.ReLU(),
            nn.Linear(100,10),nn.ReLU(),
            nn.Linear(10,1)])
    def forward(self,x):
        out=x
        for i,layer in enumerate(self.layers):
            out=layer(out)
        return out
其它用法

ModuleList 具有和List 相似的用法，实际上可以把它视作是 Module 和 list 的结合。
除了在创建 ModuleList 的时候传入一个 module 的 列表，还可以使用extend 函数和 append 函数来添加模型

其它用法

ModuleList 具有和List 相似的用法，实际上可以把它视作是 Module 和 list 的结合。
除了在创建 ModuleList 的时候传入一个 module 的 列表，还可以使用extend 函数和 append 函数来添加模型

    extend 方法
    和 list 相似，参数为一个元素为 Module的列表，该方法的效果是将列表中的所有 Module 添加到 ModuleList中。

    self.linears.extend([nn.Linear(size1, size2) for i in range(1, num_layers)])
        1

    append 方法
    和list 的append 方法一样，将 一个 Module 添加到ModuleList。

    self.linears.append(nn.Linear(size1, size2)
    
*********************************************************************************************************************************************************
三、使用 nn.Sequential()
nn.Sequential内部实现了forward函数，因此可以不用写forward函数。而nn.ModuleList则没有实现内部forward函数。
修改之后的模型如下

class model3(nn.Module):
    def __init__(self):
        super(model3, self).__init__()
        self.network=nn.Sequential(
            nn.Linear(1,10),nn.ReLU(),
            nn.Linear(10,100),nn.ReLU(),
            nn.Linear(100,10),nn.ReLU(),
            nn.Linear(10,1)
        )
    def forward(self, x):
        return self.network(x)


可以使用 self.network[0] 获取第一个 Linear子模型，由于每一个子模型没有设置唯一的名称，所以只能使用数字索引来获取。
添加子模型的方法

与ModuleList 一样，Sequential 方法除了在创建的时候直接加入子模型，也可以在创建之后加入新的模型，而且可以给子模型定义唯一的名称索引，方便获取，示例如下：

self.network.add_module("linear1",nn.Linear(100,100))


如果想获得这个子模型，只要如下操作即可：

linear=self.network.linear1


另外一种写法

from collections import OrderedDict
self.network=nn.Sequential(OrderedDict(
            ("linear1",nn.Linear(1,10)),
            ("activation1",nn.ReLU()),
            ("linear2",nn.Linear(10,100))
        ))


